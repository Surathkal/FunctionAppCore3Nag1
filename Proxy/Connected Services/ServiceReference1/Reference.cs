//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.cdyne.com/", ConfigurationName="ServiceReference1.DelayedStockQuoteSoap")]
    public interface DelayedStockQuoteSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/GetQuote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.QuoteData> GetQuoteAsync(string StockSymbol, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/GetQuickQuote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<decimal> GetQuickQuoteAsync(string StockSymbol, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.cdyne.com/GetQuoteDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetQuoteDataSetAsync(string StockSymbols, string LicenseKey);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.cdyne.com/")]
    public partial class QuoteData
    {
        
        private string stockSymbolField;
        
        private decimal lastTradeAmountField;
        
        private System.DateTime lastTradeDateTimeField;
        
        private decimal stockChangeField;
        
        private decimal openAmountField;
        
        private decimal dayHighField;
        
        private decimal dayLowField;
        
        private int stockVolumeField;
        
        private decimal prevClsField;
        
        private string changePercentField;
        
        private string fiftyTwoWeekRangeField;
        
        private decimal earnPerShareField;
        
        private decimal peField;
        
        private string companyNameField;
        
        private bool quoteErrorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string StockSymbol
        {
            get
            {
                return this.stockSymbolField;
            }
            set
            {
                this.stockSymbolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal LastTradeAmount
        {
            get
            {
                return this.lastTradeAmountField;
            }
            set
            {
                this.lastTradeAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime LastTradeDateTime
        {
            get
            {
                return this.lastTradeDateTimeField;
            }
            set
            {
                this.lastTradeDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal StockChange
        {
            get
            {
                return this.stockChangeField;
            }
            set
            {
                this.stockChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal OpenAmount
        {
            get
            {
                return this.openAmountField;
            }
            set
            {
                this.openAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public decimal DayHigh
        {
            get
            {
                return this.dayHighField;
            }
            set
            {
                this.dayHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public decimal DayLow
        {
            get
            {
                return this.dayLowField;
            }
            set
            {
                this.dayLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int StockVolume
        {
            get
            {
                return this.stockVolumeField;
            }
            set
            {
                this.stockVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public decimal PrevCls
        {
            get
            {
                return this.prevClsField;
            }
            set
            {
                this.prevClsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string ChangePercent
        {
            get
            {
                return this.changePercentField;
            }
            set
            {
                this.changePercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string FiftyTwoWeekRange
        {
            get
            {
                return this.fiftyTwoWeekRangeField;
            }
            set
            {
                this.fiftyTwoWeekRangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public decimal EarnPerShare
        {
            get
            {
                return this.earnPerShareField;
            }
            set
            {
                this.earnPerShareField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public decimal PE
        {
            get
            {
                return this.peField;
            }
            set
            {
                this.peField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string CompanyName
        {
            get
            {
                return this.companyNameField;
            }
            set
            {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public bool QuoteError
        {
            get
            {
                return this.quoteErrorField;
            }
            set
            {
                this.quoteErrorField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface DelayedStockQuoteSoapChannel : ServiceReference1.DelayedStockQuoteSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class DelayedStockQuoteSoapClient : System.ServiceModel.ClientBase<ServiceReference1.DelayedStockQuoteSoap>, ServiceReference1.DelayedStockQuoteSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public DelayedStockQuoteSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(DelayedStockQuoteSoapClient.GetBindingForEndpoint(endpointConfiguration), DelayedStockQuoteSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DelayedStockQuoteSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(DelayedStockQuoteSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DelayedStockQuoteSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(DelayedStockQuoteSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public DelayedStockQuoteSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.QuoteData> GetQuoteAsync(string StockSymbol, string LicenseKey)
        {
            return base.Channel.GetQuoteAsync(StockSymbol, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<decimal> GetQuickQuoteAsync(string StockSymbol, string LicenseKey)
        {
            return base.Channel.GetQuickQuoteAsync(StockSymbol, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetQuoteDataSetAsync(string StockSymbols, string LicenseKey)
        {
            return base.Channel.GetQuoteDataSetAsync(StockSymbols, LicenseKey);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DelayedStockQuoteSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.DelayedStockQuoteSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DelayedStockQuoteSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.cdyne.com/delayedstockquote/delayedstockquote.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.DelayedStockQuoteSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://ws.cdyne.com/delayedstockquote/delayedstockquote.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            DelayedStockQuoteSoap,
            
            DelayedStockQuoteSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.0.2")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
